NAME = babel.a

SRC_DIR = src
OBJ_DIR = obj
LIB_DIR = lib
BIN_DIR = bin
RES_DIR = res
DLL_DIR = res/dll

CC = x86_64-w64-mingw32-g++
SDL_MINGW_ROOT = /usr/x86_64-w64-mingw32

CFLAGS = -W -Wall -pedantic -ansi -std=c++11 -MMD -g3
INCLUDES = -Iinclude -I/usr/share/ijengine/include `$(SDL_MINGW_ROOT)/bin/sdl2-config --cflags`
LIBS = lib/ijengine_win.a `$(SDL_MINGW_ROOT)/bin/sdl2-config --libs` -lSDL2 -lSDL2_image -lSDL2_ttf -lmingw32

GAME = $(BIN_DIR)/babel

SRC = ${wildcard $(SRC_DIR)/*.cpp}
OBJ = ${addprefix $(OBJ_DIR)/, ${notdir ${SRC:.cpp=.o}}}

.PHONY: clean depend

all: $(GAME)
	@cp -r $(RES_DIR) $(BIN_DIR)
	@unzip -j $(DLL_DIR)/windows.zip -d $(BIN_DIR)
	@echo --- Done

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@echo Building $^
	@mkdir -p $(OBJ_DIR) $(LIB_DIR) $(BIN_DIR)
	@$(CC) -c $(CFLAGS) $(INCLUDES) $< -o $@

$(GAME): $(OBJ)
	@echo Building executable...
	@$(CC) $(CFLAGS) $(INCLUDES) $(OBJ) -o $@.exe $(LIBS)

clean:
	@echo Cleaning...
	@find . -name *.o -exec rm {} \;
	@find . -name *.d -exec rm {} \;
	@find . -name *.dll -exec rm {} \;
	@rm -rf *~ *.o bin out.txt obj lib/babel.a
	@rm -f *.dll
	@rm -f LICENSES.txt

dist-clean: clean
	@find . -name *.a -exec rm {} \;

-include $(OBJ:.o=.d)
